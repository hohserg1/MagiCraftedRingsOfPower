apply plugin: 'idea'

idea {
    module {
        inheritOutputDirs = true
    }
}
buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "https://maven.minecraftforge.net/"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath('com.anatawa12.forge:ForgeGradle:1.2-1.0.+') {
            changing = true
        }
    }
}

apply plugin: 'forge'

version = "0.7"
group = "com.yourname.modid" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "MagiCraftedRingsOfPower"

sourceCompatibility = targetCompatibility = '1.8'
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "run"
    //mappings = "stable_12"
}


dependencies {

    compileOnly 'org.projectlombok:lombok:1.18.20'
    compileOnly "io.gitlab.hohserg.elegant.networking:annotation-processor:3.14"
    annotationProcessor 'org.projectlombok:lombok:1.18.20', "io.gitlab.hohserg.elegant.networking:annotation-processor:3.14"

    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"

    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

jar {
    manifest {
        attributes([
                "FMLCorePlugin"              : "hohserg.mcrop.hooklib.example.ExampleHookLoader",
                "FMLCorePluginContainsFMLMod": "true"
        ])
    }
}

processResources {
    inputs.property "version", version

    from('./src/main/unprepared_resources/') {
        include "mcmod.info"

        expand "mod_version": version
    }

    from('.') {
        include "LICENSE.txt"
    }
}
